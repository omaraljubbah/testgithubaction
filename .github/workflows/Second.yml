name: Secoond
run-name: Deploy ${{ github.event.workflow_run.head_sha }} to dev

on:
  deployment:
#    workflows: ["aftermerge"]
#    types:
#      - completed

jobs:
  dance:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "before github ref"
          echo ${{ github.sha }}
          echo "Deploying action [push action](${{ github.event.workflow_run.html_url }})"
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event.workflow_run) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout my_organization/my_private_repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Find SHA
        id: find-sha
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # ratchet:actions/github-script@v7
        with:
          # https://docs.github.com/en/rest/git/refs#get-a-reference
          # gh api -H "Accept: application/vnd.github+json" /repos/Cinemo-GmbH/pace/git/ref/tags/dev-test
          script: |
            const backupSha =  context.payload.workflow_run?.head_sha;
            console.log(backupSha);
            core.setOutput('sha', backupSha);
      - name: Any Name Bash Test Step
        shell: bash
        run: |
          echo "previous step ${{ steps.find-sha.outputs.sha }}"
          echo "previous branch"
          echo ${{ github.event.workflow_run.head_sha }}
          echo "current ref"
          echo ${{ github.sha }}
          echo ${{ github.event.workflow_run }}

      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done